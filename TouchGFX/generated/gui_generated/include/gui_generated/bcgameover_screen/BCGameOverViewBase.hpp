/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef BCGAMEOVERVIEWBASE_HPP
#define BCGAMEOVERVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/bcgameover_screen/BCGameOverPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class BCGameOverViewBase : public touchgfx::View<BCGameOverPresenter>
{
public:
    BCGameOverViewBase();
    virtual ~BCGameOverViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Replay()
    {
        // Override and implement this function in BCGameOver
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::ButtonWithLabel buttonWithLabel1;
    touchgfx::TextArea ScoreText;
    touchgfx::TextArea HighScoreText;
    touchgfx::TextArea NewHighScoreText;
    touchgfx::TextAreaWithOneWildcard Score;
    touchgfx::TextAreaWithOneWildcard HighScore;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SCORE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar ScoreBuffer[SCORE_SIZE];
    static const uint16_t HIGHSCORE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar HighScoreBuffer[HIGHSCORE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<BCGameOverViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // BCGAMEOVERVIEWBASE_HPP
